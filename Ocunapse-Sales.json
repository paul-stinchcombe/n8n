{"createdAt":"2025-06-16T06:46:24.063Z","updatedAt":"2025-06-17T04:03:01.000Z","id":"POrErnZYZ5z1e55K","name":"Ocunapse-Sales","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-20,100],"id":"918ae018-8538-465a-9db7-dec631d1e6ad","name":"When chat message received","webhookId":"1f9bdd6d-3200-4b7b-bdb1-1413b7051174"},{"parameters":{"options":{"systemMessage":"You are a helpful assistant giving information about Ocunapse.  Use the tools to get inforation about Ocunapse.\n\nDuring the chat try to gain information about the user to qualify them as a sales lead.  The information should include:\n - Their first name.\n - Their company name.\n - Their contact information such as email or phone number.\n - Specific area of interest.\n - Budget.\nKeep the chat going until you have all the questions answered. You can use the code tool to decide if all questions have been answered.\n\nBe very conversational and informal in your approach.  Ask them questions when appropriate to get information.\n\nDon't answer questions that do not concern Ocunapse.\n\nSpeak as if you are a sales person.","maxIterations":10,"returnIntermediateSteps":false}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[336,100],"id":"0f1cf3ec-5196-46ee-b2b3-0f37f316235d","name":"AI Agent"},{"parameters":{"modelName":"models/gemini-2.5-flash-preview-04-17","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[200,320],"id":"a3c5b00b-3a30-4d1e-a451-0dac649b877c","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"RJirYLaveIvGc0IJ","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"mode":"retrieve-as-tool","toolName":"vectordb","toolDescription":"Work with ocunapse data from a pgvector db","options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePGVector","typeVersion":1.1,"position":[580,320],"id":"54c0deab-aae6-415d-9dda-6f85ced99c94","name":"Postgres PGVector Store","credentials":{"postgres":{"id":"cWB9yBXZ7zwmIPh4","name":"Postgres account"}}},{"parameters":{"modelName":"models/embedding-001"},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[680,520],"id":"388910f7-994f-4ad4-864e-d11b416d4a38","name":"Embeddings Google Gemini","credentials":{"googlePalmApi":{"id":"RJirYLaveIvGc0IJ","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('When chat message received').item.json.sessionId }}","contextWindowLength":10},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[320,320],"id":"112c9209-4eab-4058-8ea1-82a742eae0d9","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"cWB9yBXZ7zwmIPh4","name":"Postgres account"}}},{"parameters":{"options":{"groupMessages":false}},"type":"@n8n/n8n-nodes-langchain.memoryManager","typeVersion":1.1,"position":[-20,-360],"id":"e3cfd330-fe1c-4eec-b70d-0738dfcb481f","name":"Chat Memory Manager","alwaysOutputData":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"a4a6b765-1eeb-4271-a81f-c73dc5b9fc08","leftValue":"={{ $json.messages[0].human }}","rightValue":"=/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/","operator":{"type":"string","operation":"regex"}},{"id":"0311ed74-fcf8-4758-a265-c596dc4da203","leftValue":"={{ $json.messages[0].ai }}","rightValue":"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/","operator":{"type":"string","operation":"regex"}}],"combinator":"or"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[356,-360],"id":"b71f05a4-0aa7-4636-9ab3-258b1be489de","name":"If"},{"parameters":{"description":"Call this tool to asses if we have received all the answers to the qualifying user questions.\nThe tool expects the query parameter to contain boolean values for each question type.\nThis tool returns \"true\" if all questions have been answered, and \"false\" if not.","jsCode":"for(const m of query) {\n  for(const k of Object.keys(m)) {\n    if(m[k] === 'yes') return 'true'\n  }\n}\nreturn 'false'","specifyInputSchema":true,"jsonSchemaExample":"{\n\t\"email\": true,\n    \"name\": true,\n    \"company\": true,\n    \"budget\":true\n}"},"type":"@n8n/n8n-nodes-langchain.toolCode","typeVersion":1.2,"position":[880,340],"id":"267fc828-0588-4a18-970f-7bb0db86415f","name":"Code Tool"}],"connections":{"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Postgres PGVector Store":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Embeddings Google Gemini":{"ai_embedding":[[{"node":"Postgres PGVector Store","type":"ai_embedding","index":0}]]},"AI Agent":{"main":[[]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Chat Memory Manager":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[],[]]},"Code Tool":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"c7383a1f-a193-495e-a73e-f101c7dfbb77","triggerCount":0,"tags":[]}